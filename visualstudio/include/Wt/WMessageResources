// This may look like C code, but it's really -*- C++ -*-
/*
 * Copyright (C) 2008 Emweb bvba, Kessel-Lo, Belgium.
 *
 * See the LICENSE file for terms of use.
 */
#ifndef WMESSAGE_RESOURCES_
#define WMESSAGE_RESOURCES_

#include <string>
#include <vector>
#include <map>
#include <set>
#include <Wt/WFlags>
#include <Wt/WMessageResourceBundle>
#include <Wt/WDllDefs.h>

namespace Wt {

class WString;

class WT_API WMessageResources
{
public:
  WMessageResources(const std::string& path, bool loadInMemory = true);
  WMessageResources(const char *data);

  void hibernate();

  const std::string& path() const { return path_; }

  bool resolveKey(const std::string& key, std::string& result);
  bool resolvePluralKey(const std::string& key, 
			std::string& result, 
			::uint64_t amount);
 
  void refresh();

  std::set<std::string> keys(WFlags<WMessageResourceBundle::Scope> scope) const;

  typedef std::map<std::string, std::vector<std::string> > KeyValuesMap;

private:
  const bool loadInMemory_;
  bool loaded_;
  const std::string path_;

  KeyValuesMap local_;
  KeyValuesMap defaults_;

  bool readResourceFile(const std::string& locale, KeyValuesMap& valueMap);
  bool readResourceStream(std::istream &s, KeyValuesMap& valueMap,
                          const std::string &fileName);

  std::string findCase(const std::vector<std::string> &cases, 
		       ::uint64_t amount);

  std::string pluralExpression_;
  unsigned pluralCount_;
};

}

#endif // WMESSAGE_RESOURCES_
